generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider           = "typegraphql-prisma"
  output             = "./generated/type-graphql"
  emitTranspiledCode = false
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id  String  @id @default(uuid())
  name String @unique
  posts Post[]
  role   Role? @relation(fields: [roleId], references: [name], onDelete: Cascade)
  roleId String?
}

model Post {
  id  String  @id @default(uuid())
  name String @unique
  author   User @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId String
}

model Role {
  name String @id @unique
  permissions Permission[]
  users User[]
}

model Resource {
  name String @id @unique
  permissions Permission[]
}

model Permission {
  id String @id @default(uuid())
  name String
  role   Role? @relation(fields: [roleId], references: [name], onDelete: Cascade)
  roleId String?
  resource   Resource? @relation(fields: [resourceId], references: [name], onDelete: Cascade)
  resourceId String?

  @@unique([name, roleId, resourceId]) 
}


